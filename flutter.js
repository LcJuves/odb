if(!_flutter)var _flutter={};_flutter.loader=null,function(){"use strict";const a=u(d());function d(){const i=document.querySelector("base");return i&&i.getAttribute("href")||""}function u(i){return i==""||i.endsWith("/")?i:`${i}/`}async function l(i,t,e){if(t<0)return i;let r;const n=new Promise((o,s)=>{r=setTimeout(()=>{s(new Error(`${e} took more than ${t}ms to resolve. Moving on.`,{cause:l}))},t)});return Promise.race([i,n]).finally(()=>{clearTimeout(r)})}class p{constructor(t,e="flutter-js"){const r=t||[/\.js$/];window.trustedTypes&&(this.policy=trustedTypes.createPolicy(e,{createScriptURL:function(n){const o=new URL(n,window.location),s=o.pathname.split("/").pop();if(r.some(h=>h.test(s)))return o.toString();console.error("URL rejected by TrustedTypes policy",e,":",n,"(download prevented)")}}))}}class v{setTrustedTypesPolicy(t){this._ttPolicy=t}loadServiceWorker(t){if(t==null)return console.debug("Null serviceWorker configuration. Skipping."),Promise.resolve();if(!("serviceWorker"in navigator)){let c="Service Worker API unavailable.";return window.isSecureContext||(c+=`
The current context is NOT secure.`,c+=`
Read more: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts`),Promise.reject(new Error(c))}const{serviceWorkerVersion:e,serviceWorkerUrl:r=`${a}flutter_service_worker.js?v=${e}`,timeoutMillis:n=4e3}=t;let o=r;this._ttPolicy!=null&&(o=this._ttPolicy.createScriptURL(o));const s=navigator.serviceWorker.register(o).then(this._getNewServiceWorker).then(this._waitForServiceWorkerActivation);return l(s,n,"prepareServiceWorker")}async _getNewServiceWorker(t){const e=await t;return!e.active&&(e.installing||e.waiting)?(console.debug("Installing/Activating first service worker."),e.installing||e.waiting):e.active.scriptURL.endsWith(serviceWorkerVersion)?(console.debug("Loading from existing service worker."),e.active):e.update().then(r=>(console.debug("Updating service worker."),r.installing||r.waiting||r.active))}async _waitForServiceWorkerActivation(t){const e=await t;return!e||e.state=="activated"?e?(console.debug("Service worker already active."),Promise.resolve()):Promise.reject(new Error("Cannot activate a null service worker!")):new Promise((r,n)=>{e.addEventListener("statechange",()=>{e.state=="activated"&&(console.debug("Activated new service worker."),r())})})}}class y{constructor(){this._scriptLoaded=!1}setTrustedTypesPolicy(t){this._ttPolicy=t}async loadEntrypoint(t){const{entrypointUrl:e=`${a}main.dart.js`,onEntrypointLoaded:r}=t||{};return this._loadEntrypoint(e,r)}didCreateEngineInitializer(t){typeof this._didCreateEngineInitializerResolve=="function"&&(this._didCreateEngineInitializerResolve(t),this._didCreateEngineInitializerResolve=null,delete _flutter.loader.didCreateEngineInitializer),typeof this._onEntrypointLoaded=="function"&&this._onEntrypointLoaded(t)}_loadEntrypoint(t,e){const r=typeof e=="function";if(!this._scriptLoaded){this._scriptLoaded=!0;const n=this._createScriptTag(t);if(r)console.debug("Injecting <script> tag. Using callback."),this._onEntrypointLoaded=e,document.body.append(n);else return new Promise((o,s)=>{console.debug("Injecting <script> tag. Using Promises. Use the callback approach instead!"),this._didCreateEngineInitializerResolve=o,n.addEventListener("error",s),document.body.append(n)})}}_createScriptTag(t){const e=document.createElement("script");e.type="application/javascript";let r=t;return this._ttPolicy!=null&&(r=this._ttPolicy.createScriptURL(t)),e.src=r,e}}class g{async loadEntrypoint(t){const{serviceWorker:e,...r}=t||{},n=new p,o=new v;o.setTrustedTypesPolicy(n.policy),await o.loadServiceWorker(e).catch(c=>{console.warn("Exception while loading service worker:",c)});const s=new y;return s.setTrustedTypesPolicy(n.policy),this.didCreateEngineInitializer=s.didCreateEngineInitializer.bind(s),s.loadEntrypoint(r)}}_flutter.loader=new g}();
